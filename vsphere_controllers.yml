- hosts: localhost
  connection: local
  roles:
    - { role: avinetworks.avicontroller_vmware }
  serial: 3
  gather_facts: True
  tasks:
    - name: "Create a VM {{ id }} folder on given datacenter"
      vcenter_folder:
        hostname: '{{ vcenter_host }}'
        username: '{{ vcenter_user }}'
        password: '{{ vcenter_password }}'
        validate_certs: False
        datacenter_name: "{{ dc }}"
        folder_name: "{{ id }}"
        folder_type: vm
        state: present
      delegate_to: localhost

    - name: "Create VM from Server Template"
      vmware_guest:
        hostname: '{{ vcenter_host }}'
        username: '{{ vcenter_user }}'
        password: '{{ vcenter_password }}'
        validate_certs: False
        name: "{{ id }}_jumpbox"
        template: "{{ server_template }}"
        datacenter: "{{ dc }}"
        folder: "{{ id }}"
        networks:
        - name: "{{ mgmt_network }}"
        - name: "{{ server_network }}"
        state: poweredon
        wait_for_ip_address: yes
      register: jumpbox

    - name: "Create VM from Web Server Template"
      vmware_guest:
        hostname: '{{ vcenter_host }}'
        username: '{{ vcenter_user }}'
        password: '{{ vcenter_password }}'
        validate_certs: False
        name: "{{ id }}_webserver{{ item }}"
        template: "{{ server_template }}"
        datacenter: "{{ dc }}"
        folder: "{{ id }}"
        networks:
        - name: "{{ server_network }}"
        state: poweredon
        wait_for_ip_address: yes
      with_sequence: count={{ webserver_count }}
      register: webservers

    - name: "Create VM from Avi Controller Template"
      vmware_guest:
        hostname: '{{ vcenter_host }}'
        username: '{{ vcenter_user }}'
        password: '{{ vcenter_password }}'
        validate_certs: False
        name: "{{ id }}_controller{{ item }}"
        template: "{{ avi_controller_template }}"
        datacenter: "{{ dc }}"
        folder: "{{ id }}"
        networks:
        - name: "{{ mgmt_network }}"
        state: poweredon
        wait_for_ip_address: yes
      with_sequence: count={{ pod_count }}
      register: controllers

    - debug:
        msg: "Jumphost IP: {{ jumpbox.instance.ipv4 }}"
    - debug:
        msg: "Web Servers"
    - debug:
        msg: "{{ webservers.results[item|int].instance.hw_name }} {{ webservers.results[item|int].instance.ipv4 }}"
      with_sequence: start=0 end={{ webserver_count - 1 }}
    - debug:
        msg: "Controllers"
    - debug:
        msg: "{{ controllers.results[item|int].instance.hw_name }} {{ controllers.results[item|int].instance.ipv4 }}"
      with_sequence: start=0 end={{ pod_count - 1 }}
    - debug:
